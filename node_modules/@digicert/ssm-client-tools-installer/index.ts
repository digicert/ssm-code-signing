import { getTempDirectory } from "./utils/fileSystemUtils";
import "dotenv/config";
import { installToolsBasedOnOS } from "./installToolsOnOS";
import * as tl from "azure-pipelines-task-lib/task";
import * as core from "@actions/core";

 
export async function main(usecase: string = ""): Promise<string> {
  var outputVar:any={ "ret_code" : 1,"imp_file_paths" :{}} 
  try {
        
    const tempDirectoryPath = getTempDirectory();
    console.log("using path ", tempDirectoryPath);
    const configFilePath = await installToolsBasedOnOS(
      tempDirectoryPath,
      usecase,
      outputVar
    );
    if (usecase != "gpg-signing") {
      console.info("\nPKCS11 config file written in path: ", configFilePath);
      tl.setVariable("PKCS11_CONFIG", configFilePath, false, true);
      outputVar.imp_file_paths.PKCS11_CONFIG=configFilePath
      console.info("\nPKCS11 config file written in path: ", configFilePath);
    }
    console.log("\nSSM tools setup completed");
    console.log(outputVar.imp_file_paths.PKCS11_CONFIG)
    return JSON.stringify(outputVar);
  } catch (err: any) {
    core.setFailed(err.message);
    console.error("\nerror when executing setup task of SSM", err);
    return JSON.stringify(outputVar);
  }
}
main()
module.exports = { main };
