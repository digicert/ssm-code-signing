import fs from "fs";
import path from "path";
import { getAPICall, getConfigFilePath, uiAPIPrefix } from "./utils/services";
import * as tl from "azure-pipelines-task-lib/task";
import * as tr from "azure-pipelines-task-lib/toolrunner";
import extract from "extract-zip";
import {runWinToolBasedInstallationOrExtraction} from './runwintools'


// export async function runWinToolBasedInstallationOrExtraction(
//   toolToBeUsed: string,
//   tempDirectoryPath: string
// ) {
//   const urlToDownloadTool = `${uiAPIPrefix}/releases/noauth/${toolToBeUsed}/download`;
//   console.log(
//     "Tool to be downloaded and used {} and url is {}",
//     toolToBeUsed,
//     urlToDownloadTool
//   );
//   console.log("ui Api", uiAPIPrefix);
//   const toolFileData = await getAPICall(urlToDownloadTool, {
//     responseType: "arraybuffer",
//   });
//   //file writing part
//   const clientToolsDownloadPath = path.join(tempDirectoryPath, toolToBeUsed);
//   fs.writeFileSync(clientToolsDownloadPath, toolFileData);

//   console.log("file after write ", fs.statSync(clientToolsDownloadPath).size);
//   let extractPath = "";
//   //checking for .msi files
//   if (toolToBeUsed.includes(".msi")) {
//     extractPath = path.join(
//       tempDirectoryPath,
//       toolToBeUsed.replace(".msi", "")
//     );
//     //tool to run .msi file
//     let msiRunner: tr.ToolRunner = tl
//       .tool("msiexec")
//       .arg([
//         `/i`,
//         `${tempDirectoryPath}\\${toolToBeUsed}`,
//         "/quiet",
//         `INSTALLDIR=${extractPath}`,
//       ]);

//     let regReturnCode: number = await msiRunner.exec();
//     if (regReturnCode != 0) {
//       throw new Error(
//         `Installation of msi failed with return code ${regReturnCode}`
//       );
//     }
//     console.log("installation of smctl returned code", regReturnCode);

//     //cli tools installation
//     const installationLocation = tl
//       .tool("wmic")
//       .arg([
//         "product",
//         "where",
//         "Vendor='DigiCert Inc.' and name='DigiCert One Signing Manager Tools'",
//         "get",
//         "installlocation",
//         "/format:list",
//       ])
//       .execSync();

//     const { stdout } = installationLocation;
//     if (
//       stdout !== null &&
//       stdout.trim() !== "" &&
//       !stdout.includes("No Instance(s) Available")
//     ) {
//       extractPath = stdout.split("=")[1].trim();
//     } else {
//       throw new Error("Installation path is not found, internal error");
//     }
//   }
//   return extractPath;
// }

export async function installWindowsTools(
  installationPath: string,
  toolToBeUsed: string
) {
  try {
    fs.mkdirSync(`${installationPath}`);
  } catch (err) {}
  
  const extractPath = await runWinToolBasedInstallationOrExtraction(
    toolToBeUsed,
    installationPath
  );

  console.log(
    "path where the ssm tools were installed/extracted is ",
    extractPath
  );
  //pkcs11 library installation
  const pkcs11FileName = "smpkcs11.dll";
  const configFilePath = await getConfigFilePath(pkcs11FileName, extractPath);

  return configFilePath;
}
module.exports={installWindowsTools}