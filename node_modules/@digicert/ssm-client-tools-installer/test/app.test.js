// const installToolsBasedOnOS = require("../installToolsOnOS");
// const filesystems = require("../utils/fileSystemUtils");
// const installwindows = require("../installwindowsTools");
// const services = require("../utils/services");
// const runwin = require("../runwintools");
// const getos = require("../OsType");
// const tooltobeused = ["smtools-windows-x64.msi"];
// const installationPath = filesystems.getTempDirectory();
// const extractPath = `${installationPath}`;
// const configfile = `${installationPath}\\pkcsproperties.cfg`;
// const keypairUsecase = "keypair-signing";
// const gpgUsecase = "gpg-signing";
// process.env.CI=false
// test("keypair branch", async () => {
//   installwindows.installWindowsTools = jest.fn(() => extractPath);
//   await installToolsBasedOnOS.installToolsBasedOnOS(
//     installationPath,
//     keypairUsecase
//   );
//   expect(installwindows.installWindowsTools).toHaveBeenCalled();
// });

// test("gpg branch", async () => {
//   installwindows.installWindowsTools = jest.fn(() => extractPath);
//   await installToolsBasedOnOS.installToolsBasedOnOS(
//     installationPath,
//     gpgUsecase
//   );
//   expect(installwindows.installWindowsTools).toHaveBeenCalled();
// });

// test("windowstools", async () => {
//   services.getConfigFilePath = jest.fn(() => configfile);
//   services.callApi = jest.fn();
//   await runwin.runWinToolBasedInstallationOrExtraction(
//     tooltobeused,
//     installationPath,
//     keypairUsecase
//   );

//   expect(services.callApi).toHaveBeenCalled();
// });

// test("filesystems", async () => {
//   process.env.AGENT_WORKFOLDER = jest.fn(() => installationPath);
//   await expect(filesystems.getTempDirectory()).toBeDefined();
// });

// test("getos branch", async () => {
//   process.env["Agent_OS"] = "Linux";
//   await expect(getos.getOS()).toBeDefined();
// });
test("sample test",()=>{
  expect(true).toBe(true)
})