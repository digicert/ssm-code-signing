import os from "os";
import { tempDirectory } from "./utils/fileSystemUtils";
import "dotenv/config";
import { installWindowsTools } from "./installwindowsTools";
import { installLinuxTools } from "./installLinuxTools";
import { tool } from "azure-pipelines-task-lib";
import { installMacTools } from "./installMacTools";
export const getOS = () => os.type();

export const OSToToolMapper: { [key: string]: string } = {
  linux: "smtools-linux-x64.zip",
  win32: "smtools-windows-x64.msi",
  MacOS:"smctk-apple-any"
};

export async function installToolsBasedOnOS(installationPath: string) {
  let OS = getOS();
  switch (OS) {
    case "Darwin":
      OS="MacOS";
      break;
    case "Linux":
      OS = "linux";
      break;
    case "Windows_NT":
      OS = "win32";
      break;
  }
  console.log("os type", OS);
  // if (!OSToToolMapper.hasOwnProperty(OS)) {
  //   throw new Error("Mac OS is not yet supported");
  // }
  const toolToBeUsed = OSToToolMapper[OS];

  if (OS == "win32") {
    return await installWindowsTools(installationPath, toolToBeUsed);
   } 
  else if (OS == "linux") {
    console.log("welcome to linux!!");
    return await installLinuxTools(installationPath, toolToBeUsed);
  }else{
    console.log("welcome to macos");
    return await installMacTools(installationPath,toolToBeUsed)
  }
}

module.exports={installToolsBasedOnOS}