import fs from "fs";
import path from "path";
import * as tl from "azure-pipelines-task-lib/task";
import * as tr from "azure-pipelines-task-lib/toolrunner";
import { getConfigFilePath } from "./utils/services";
import { runLnxToolBasedInstallationOrExtraction } from "./runLinuxTools";


export async function installLinuxTools(
  installationPath: string,
  toolToBeUsed: string[],
  usecase: string,
  outputVar:any
): Promise<string> {
  const directoryPath =
    usecase == ""
      ? `${installationPath}`
      : `${installationPath}//DigiCert One Signing Manager Tools/`;
  try {
    fs.mkdirSync(`${directoryPath}`);
  } catch (err) {}
  const extractPath = await runLnxToolBasedInstallationOrExtraction(
    toolToBeUsed,
    directoryPath,
    usecase
  );
  
  console.log(
    "path where the ssm tools were installed/extracted is ",
    extractPath
  );
  
  outputVar.imp_file_paths["extractPath"]=extractPath
  const setExecutableFlagForSmctl: tr.ToolRunner = tl
    .tool("chmod")
    .arg("+x")
    .arg(path.join(extractPath, "smctl"));
  const syncRetCode: number = await setExecutableFlagForSmctl.exec();
  console.log("set executable flag for smctl" + syncRetCode);
  let configFilePath = "";
  if (usecase != "gpg-signing") {
    const pkcs11FileName = "smpkcs11.so";
    configFilePath = await getConfigFilePath(pkcs11FileName, extractPath);
  }
  return configFilePath;
}
