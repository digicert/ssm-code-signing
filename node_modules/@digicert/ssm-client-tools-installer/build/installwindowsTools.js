"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.installWindowsTools = void 0;
const fs_1 = __importDefault(require("fs"));
const services_1 = require("./utils/services");
const runwintools_1 = require("./runwintools");
async function installWindowsTools(installationPath, toolToBeUsed, usecase, outputVar) {
    const directoryPath = usecase == "gpg-signing"
        ? `${installationPath}//DigiCert One Signing Manager Tools/`
        : `${installationPath}`;
    try {
        fs_1.default.mkdirSync(`${directoryPath}`);
    }
    catch (err) { }
    const extractPath = await (0, runwintools_1.runWinToolBasedInstallationOrExtraction)(toolToBeUsed, directoryPath, usecase);
    if (usecase == "gpg-signing") {
        console.log("path where the ssm tools were installed/extracted is ", directoryPath);
    }
    else {
        console.log("path where the ssm tools were installed/extracted is ", extractPath);
    }
    outputVar.imp_file_paths["directoryPath"] = directoryPath;
    outputVar.imp_file_paths["extractPath"] = extractPath;
    let configFilePath = "";
    //pkcs11 library installation
    if (usecase != "gpg-signing") {
        const pkcs11FileName = "smpkcs11.dll";
        configFilePath = await (0, services_1.getConfigFilePath)(pkcs11FileName, extractPath);
    }
    return configFilePath;
}
exports.installWindowsTools = installWindowsTools;
module.exports = { installWindowsTools };
