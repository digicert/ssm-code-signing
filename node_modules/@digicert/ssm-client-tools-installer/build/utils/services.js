"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getConfigFilePath = exports.getAPICall = exports.uiAPIPrefix = void 0;
const axios_1 = __importDefault(require("axios"));
const tl = __importStar(require("azure-pipelines-task-lib/task"));
const path_1 = __importDefault(require("path"));
const fs_1 = __importDefault(require("fs"));
const getHost = () => {
    // return process.env.NODE_ENV === "development"
    //   ? "http://dcone.cluster.local"
    //   : "https://demo.one.digicert.com";
    return "https://demo.one.digicert.com";
};
exports.uiAPIPrefix = "signingmanager/api-ui/v1";
const getAPICall = async (uri, config) => {
    const apiKey = extractAndValidateApiKey();
    console.log("apikey", apiKey);
    const options = {
        ...config,
    };
    // if (apiKey) {
    //   options.headers = {
    //     "x-api-key": apiKey,
    //   };
    // }
    const host = getHost();
    const response = await axios_1.default.get(`${host}/${uri}`, options);
    return response.data;
};
exports.getAPICall = getAPICall;
function extractAndValidateApiKey() {
    return tl.getInput("APIKey", false) || process.env.SM_API_KEY;
}
const getConfigFilePath = async (pkcs11FileName, extractPath) => {
    const configFilePath = path_1.default.join(extractPath, "pkcs11properties.cfg");
    console.info("The pkcs11 library path set is ", path_1.default.join(extractPath, pkcs11FileName), "and config file path is ", configFilePath);
    fs_1.default.writeFileSync(configFilePath, `name=signingmanager\r\nlibrary=${path_1.default.join(extractPath, pkcs11FileName)}\r\nslotListIndex=0`);
    return configFilePath;
};
exports.getConfigFilePath = getConfigFilePath;
module.exports = { getAPICall: exports.getAPICall, getConfigFilePath: exports.getConfigFilePath };
