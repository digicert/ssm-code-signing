import axios, { AxiosRequestConfig } from "axios";
import * as tl from "azure-pipelines-task-lib/task";
import path from 'path';
import fs from 'fs';

const getHost = () => {
  // return process.env.NODE_ENV === "development"
  //   ? "http://dcone.cluster.local"
  //   : "https://demo.one.digicert.com";
  return "http://dcone.cluster.local";
};

export const uiAPIPrefix = "signingmanager/api-ui/v1";

export const getAPICall = async (uri: string, config: AxiosRequestConfig) => {
  const apiKey: string | undefined = extractAndValidateApiKey();
  console.log("apikey",apiKey);
  const options: AxiosRequestConfig = {
    ...config,
  };

  // if (apiKey) {
  //   options.headers = {
  //     "x-api-key": apiKey,
  //   };
  // }
  const host = getHost();
  console.log("hello world")
  const response = await axios.get(`${host}/${uri}`, options);
  return response.data;
};

function extractAndValidateApiKey() {
  return tl.getInput("APIKey", false) || process.env.SM_API_KEY;
}

export const getConfigFilePath=async (pkcs11FileName:string,extractPath:string)=>{
  const configFilePath = path.join(extractPath, "pkcs11properties.cfg");
  console.info(
    "The pkcs11 library path set is ",
    path.join(extractPath, pkcs11FileName),
    "and config file path is ",
    configFilePath
  );
  fs.writeFileSync(
    configFilePath,
    `name=signingmanager\r\nlibrary=${path.join(
      extractPath,
      pkcs11FileName
    )}\r\nslotListIndex=0`
  );
  
  return configFilePath;

}
module.exports={getAPICall,getConfigFilePath}